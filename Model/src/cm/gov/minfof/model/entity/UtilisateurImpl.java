package cm.gov.minfof.model.entity;

import java.math.BigDecimal;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Oct 31 09:23:02 WAT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class UtilisateurImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        Idutilisateur,
        Loginuser,
        Passworduser,
        Nomuser,
        Telephone,
        Niveauintervention,
        Idregions,
        Iddepartements,
        Idgroupe,
        Utilisateur,
        IdgroupeUtilisateur,
        Utilisateur1,
        IddepartementsUtilisateur,
        Utilisateur2,
        IdregionsUtilisateur,
        Groupeutilisateur,
        Groupeutilisateur1,
        Groupeutilisateur2;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int IDUTILISATEUR = AttributesEnum.Idutilisateur.index();
    public static final int LOGINUSER = AttributesEnum.Loginuser.index();
    public static final int PASSWORDUSER = AttributesEnum.Passworduser.index();
    public static final int NOMUSER = AttributesEnum.Nomuser.index();
    public static final int TELEPHONE = AttributesEnum.Telephone.index();
    public static final int NIVEAUINTERVENTION = AttributesEnum.Niveauintervention.index();
    public static final int IDREGIONS = AttributesEnum.Idregions.index();
    public static final int IDDEPARTEMENTS = AttributesEnum.Iddepartements.index();
    public static final int IDGROUPE = AttributesEnum.Idgroupe.index();
    public static final int UTILISATEUR = AttributesEnum.Utilisateur.index();
    public static final int IDGROUPEUTILISATEUR = AttributesEnum.IdgroupeUtilisateur.index();
    public static final int UTILISATEUR1 = AttributesEnum.Utilisateur1.index();
    public static final int IDDEPARTEMENTSUTILISATEUR = AttributesEnum.IddepartementsUtilisateur.index();
    public static final int UTILISATEUR2 = AttributesEnum.Utilisateur2.index();
    public static final int IDREGIONSUTILISATEUR = AttributesEnum.IdregionsUtilisateur.index();
    public static final int GROUPEUTILISATEUR = AttributesEnum.Groupeutilisateur.index();
    public static final int GROUPEUTILISATEUR1 = AttributesEnum.Groupeutilisateur1.index();
    public static final int GROUPEUTILISATEUR2 = AttributesEnum.Groupeutilisateur2.index();

    /**
     * This is the default constructor (do not remove).
     */
    public UtilisateurImpl() {
    }

    /**
     * Gets the attribute value for Idutilisateur, using the alias name Idutilisateur.
     * @return the value of Idutilisateur
     */
    public BigDecimal getIdutilisateur() {
        return (BigDecimal) getAttributeInternal(IDUTILISATEUR);
    }

    /**
     * Sets <code>value</code> as the attribute value for Idutilisateur.
     * @param value value to set the Idutilisateur
     */
    public void setIdutilisateur(BigDecimal value) {
        setAttributeInternal(IDUTILISATEUR, value);
    }

    /**
     * Gets the attribute value for Loginuser, using the alias name Loginuser.
     * @return the value of Loginuser
     */
    public String getLoginuser() {
        return (String) getAttributeInternal(LOGINUSER);
    }

    /**
     * Sets <code>value</code> as the attribute value for Loginuser.
     * @param value value to set the Loginuser
     */
    public void setLoginuser(String value) {
        setAttributeInternal(LOGINUSER, value);
    }

    /**
     * Gets the attribute value for Passworduser, using the alias name Passworduser.
     * @return the value of Passworduser
     */
    public String getPassworduser() {
        return (String) getAttributeInternal(PASSWORDUSER);
    }

    /**
     * Sets <code>value</code> as the attribute value for Passworduser.
     * @param value value to set the Passworduser
     */
    public void setPassworduser(String value) {
        setAttributeInternal(PASSWORDUSER, value);
    }

    /**
     * Gets the attribute value for Nomuser, using the alias name Nomuser.
     * @return the value of Nomuser
     */
    public String getNomuser() {
        return (String) getAttributeInternal(NOMUSER);
    }

    /**
     * Sets <code>value</code> as the attribute value for Nomuser.
     * @param value value to set the Nomuser
     */
    public void setNomuser(String value) {
        setAttributeInternal(NOMUSER, value);
    }

    /**
     * Gets the attribute value for Telephone, using the alias name Telephone.
     * @return the value of Telephone
     */
    public String getTelephone() {
        return (String) getAttributeInternal(TELEPHONE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Telephone.
     * @param value value to set the Telephone
     */
    public void setTelephone(String value) {
        setAttributeInternal(TELEPHONE, value);
    }

    /**
     * Gets the attribute value for Niveauintervention, using the alias name Niveauintervention.
     * @return the value of Niveauintervention
     */
    public Integer getNiveauintervention() {
        return (Integer) getAttributeInternal(NIVEAUINTERVENTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for Niveauintervention.
     * @param value value to set the Niveauintervention
     */
    public void setNiveauintervention(Integer value) {
        setAttributeInternal(NIVEAUINTERVENTION, value);
    }

    /**
     * Gets the attribute value for Idregions, using the alias name Idregions.
     * @return the value of Idregions
     */
    public BigDecimal getIdregions() {
        return (BigDecimal) getAttributeInternal(IDREGIONS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Idregions.
     * @param value value to set the Idregions
     */
    public void setIdregions(BigDecimal value) {
        setAttributeInternal(IDREGIONS, value);
    }

    /**
     * Gets the attribute value for Iddepartements, using the alias name Iddepartements.
     * @return the value of Iddepartements
     */
    public BigDecimal getIddepartements() {
        return (BigDecimal) getAttributeInternal(IDDEPARTEMENTS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Iddepartements.
     * @param value value to set the Iddepartements
     */
    public void setIddepartements(BigDecimal value) {
        setAttributeInternal(IDDEPARTEMENTS, value);
    }

    /**
     * Gets the attribute value for Idgroupe, using the alias name Idgroupe.
     * @return the value of Idgroupe
     */
    public BigDecimal getIdgroupe() {
        return (BigDecimal) getAttributeInternal(IDGROUPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Idgroupe.
     * @param value value to set the Idgroupe
     */
    public void setIdgroupe(BigDecimal value) {
        setAttributeInternal(IDGROUPE, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getUtilisateur() {
        return (RowIterator) getAttributeInternal(UTILISATEUR);
    }

    /**
     * @return the associated entity UtilisateurImpl.
     */
    public UtilisateurImpl getIdgroupeUtilisateur() {
        return (UtilisateurImpl) getAttributeInternal(IDGROUPEUTILISATEUR);
    }

    /**
     * Sets <code>value</code> as the associated entity UtilisateurImpl.
     */
    public void setIdgroupeUtilisateur(UtilisateurImpl value) {
        setAttributeInternal(IDGROUPEUTILISATEUR, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getUtilisateur1() {
        return (RowIterator) getAttributeInternal(UTILISATEUR1);
    }

    /**
     * @return the associated entity UtilisateurImpl.
     */
    public UtilisateurImpl getIddepartementsUtilisateur() {
        return (UtilisateurImpl) getAttributeInternal(IDDEPARTEMENTSUTILISATEUR);
    }

    /**
     * Sets <code>value</code> as the associated entity UtilisateurImpl.
     */
    public void setIddepartementsUtilisateur(UtilisateurImpl value) {
        setAttributeInternal(IDDEPARTEMENTSUTILISATEUR, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getUtilisateur2() {
        return (RowIterator) getAttributeInternal(UTILISATEUR2);
    }

    /**
     * @return the associated entity UtilisateurImpl.
     */
    public UtilisateurImpl getIdregionsUtilisateur() {
        return (UtilisateurImpl) getAttributeInternal(IDREGIONSUTILISATEUR);
    }

    /**
     * Sets <code>value</code> as the associated entity UtilisateurImpl.
     */
    public void setIdregionsUtilisateur(UtilisateurImpl value) {
        setAttributeInternal(IDREGIONSUTILISATEUR, value);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getGroupeutilisateur() {
        return (EntityImpl) getAttributeInternal(GROUPEUTILISATEUR);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setGroupeutilisateur(EntityImpl value) {
        setAttributeInternal(GROUPEUTILISATEUR, value);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getGroupeutilisateur1() {
        return (EntityImpl) getAttributeInternal(GROUPEUTILISATEUR1);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setGroupeutilisateur1(EntityImpl value) {
        setAttributeInternal(GROUPEUTILISATEUR1, value);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getGroupeutilisateur2() {
        return (EntityImpl) getAttributeInternal(GROUPEUTILISATEUR2);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setGroupeutilisateur2(EntityImpl value) {
        setAttributeInternal(GROUPEUTILISATEUR2, value);
    }

    /**
     * @param idutilisateur key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(BigDecimal idutilisateur) {
        return new Key(new Object[] { idutilisateur });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("cm.gov.minfof.model.entity.Utilisateur");
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}

